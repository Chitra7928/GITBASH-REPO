package com.countryFlag.dataFlex.playername;

import java.io.IOException;

import org.apache.xmlbeans.XmlException;
import org.testng.Assert;
import org.testng.annotations.Test;

import com.countryFlag.dataFlex.constant.IConstant;
import com.countryFlag.dataFlex.genericUtils.BaseTest;
import com.eviware.soapui.impl.wsdl.testcase.WsdlTestCase;
import com.eviware.soapui.model.support.PropertiesMap;
import com.eviware.soapui.model.testsuite.TestRunner;
import com.eviware.soapui.support.SoapUIException;


/**
 * @author Chitra
 * Player Name Test
 */

public class playerNameTest extends BaseTest {
		/**
		 * Calling Test Case 1 with priority as 1
		 * @throws XmlException
		 * @throws IOException      //
		 * @throws SoapUIException
		 */

		@Test(priority = 1)
		public void verifyValidInputInPlayerName() throws XmlException, IOException, SoapUIException
		{
			/***calling configTest to get test case by passing test case name***/
			WsdlTestCase testCase = configTest(IConstant.VerifyValidInputInPlayerName);
			/***Running the test case using run and passing properties and flag as false***/
			TestRunner runner = testCase.run(new PropertiesMap(),false);
			/***Comparing expected test case result with the actual test case result***/
			Assert.assertEquals(IConstant.STATUS, runner.getStatus().toString());
		}

		@Test(priority = 2)
		public void verifyInputFirstNameForPlayer() throws XmlException, IOException, SoapUIException
		{
			/***calling configTest to get test case by passing test case name***/
			WsdlTestCase testCase = configTest(IConstant.VerifyInputFirstNameForPlayer);
			/***Running the test case using run and passing properties and flag as false***/
			TestRunner runner = testCase.run(new PropertiesMap(),false);
			/***Comparing expected test case result with the actual test case result***/
			Assert.assertEquals(IConstant.STATUS, runner.getStatus().toString());
		}

		@Test(priority = 3)
		public void verifyInputSplCharForPlayer() throws XmlException, IOException, SoapUIException
		{
			/***calling configTest to get test case by passing test case name***/
			WsdlTestCase testCase = configTest(IConstant.VerifyInputSplcharForPlayer);
			/***Running the test case using run and passing properties and flag as false***/
			TestRunner runner = testCase.run(new PropertiesMap(),false);
			/***Comparing expected test case result with the actual test case result***/
			Assert.assertEquals(IConstant.STATUS, runner.getStatus().toString());
		}

		@Test(priority = 4)
		public void verifyInputLowercaseForPlayer() throws XmlException, IOException, SoapUIException
		{
			/***calling configTest to get test case by passing test case name***/
			WsdlTestCase testCase = configTest(IConstant.VerifyInputLowercaseForPlayer);
			/***Running the test case using run and passing properties and flag as false***/
			TestRunner runner = testCase.run(new PropertiesMap(),false);
			/***Comparing expected test case result with the actual test case result***/
			Assert.assertEquals(IConstant.STATUS, runner.getStatus().toString());
		}
		
		@Test(priority = 5)
		public void verifyInputAlphanumericForPlayer() throws XmlException, IOException, SoapUIException
		{
			/***calling configTest to get test case by passing test case name***/
			WsdlTestCase testCase = configTest(IConstant.VerifyInputAlphanumericForPlayer);
			/***Running the test case using run and passing properties and flag as false***/
			TestRunner runner = testCase.run(new PropertiesMap(),false);
			/***Comparing expected test case result with the actual test case result***/
			Assert.assertEquals(IConstant.STATUS, runner.getStatus().toString());
		}
		
		@Test(priority = 6)
		public void verifyInputForBlankForPlayer() throws XmlException, IOException, SoapUIException
		{
			/***calling configTest to get test case by passing test case name***/
			WsdlTestCase testCase = configTest(IConstant.VerifyInputForBlankForPlayer);
			/***Running the test case using run and passing properties and flag as false***/
			TestRunner runner = testCase.run(new PropertiesMap(),false);
			/***Comparing expected test case result with the actual test case result***/
			Assert.assertEquals(IConstant.STATUS, runner.getStatus().toString());
		}

		@Test(priority = 7)
		public void verifyInputMultipleNamesForPlayer() throws XmlException, IOException, SoapUIException
		{
			/***calling configTest to get test case by passing test case name***/
			WsdlTestCase testCase = configTest(IConstant.VerifyInputMultipleNamesForPlayer);
			/***Running the test case using run and passing properties and flag as false***/
			TestRunner runner = testCase.run(new PropertiesMap(),false);
			/***Comparing expected test case result with the actual test case result***/
			Assert.assertEquals(IConstant.STATUS, runner.getStatus().toString());
		}
		
		@Test(priority = 8)
		public void verifyValidInputForCountryName() throws XmlException, IOException, SoapUIException
		{
			/***calling configTest to get test case by passing test case name***/
			WsdlTestCase testCase = configTest(IConstant.VerifyValidInputForCountryName);
			/***Running the test case using run and passing properties and flag as false***/
			TestRunner runner = testCase.run(new PropertiesMap(),false);
			/***Comparing expected test case result with the actual test case result***/
			Assert.assertEquals(IConstant.STATUS, runner.getStatus().toString());
		}
		
		@Test(priority = 9)
		public void verifyInputWithSpaceForCountryName() throws XmlException, IOException, SoapUIException
		{
			/***calling configTest to get test case by passing test case name***/
			WsdlTestCase testCase = configTest(IConstant.VerifyInputWithSpaceForCountryName);
			/***Running the test case using run and passing properties and flag as false***/
			TestRunner runner = testCase.run(new PropertiesMap(),false);
			/***Comparing expected test case result with the actual test case result***/
			Assert.assertEquals(IConstant.STATUS, runner.getStatus().toString());
		}

		@Test(priority = 10)
		public void verifyInputSpcharForCountryName() throws XmlException, IOException, SoapUIException
		{
			/***calling configTest to get test case by passing test case name***/
			WsdlTestCase testCase = configTest(IConstant.VerifyInputSpcharForCountryName);
			/***Running the test case using run and passing properties and flag as false***/
			TestRunner runner = testCase.run(new PropertiesMap(),false);
			/***Comparing expected test case result with the actual test case result***/
			Assert.assertEquals(IConstant.STATUS, runner.getStatus().toString());
		}
		
		@Test(priority = 11)
		public void verifyInputLowercaseForCountryName() throws XmlException, IOException, SoapUIException
		{
			/***calling configTest to get test case by passing test case name***/
			WsdlTestCase testCase = configTest(IConstant.VerifyInputLowercaseForCountryName);
			/***Running the test case using run and passing properties and flag as false***/
			TestRunner runner = testCase.run(new PropertiesMap(),false);
			/***Comparing expected test case result with the actual test case result***/
			Assert.assertEquals(IConstant.STATUS, runner.getStatus().toString());
		}
		
		@Test(priority = 12)
		public void verifyInputAlphanumForCountryName() throws XmlException, IOException, SoapUIException
		{
			/***calling configTest to get test case by passing test case name***/
			WsdlTestCase testCase = configTest(IConstant.VerifyInputAlphanumForCountryName);
			/***Running the test case using run and passing properties and flag as false***/
			TestRunner runner = testCase.run(new PropertiesMap(),false);
			/***Comparing expected test case result with the actual test case result***/
			Assert.assertEquals(IConstant.STATUS, runner.getStatus().toString());
		}
		
		@Test(priority = 13)
		public void verifyInputBlankForCountryName() throws XmlException, IOException, SoapUIException
		{
			/***calling configTest to get test case by passing test case name***/
			WsdlTestCase testCase = configTest(IConstant.VerifyInputBlankForCountryName);
			/***Running the test case using run and passing properties and flag as false***/
			TestRunner runner = testCase.run(new PropertiesMap(),false);
			/***Comparing expected test case result with the actual test case result***/
			Assert.assertEquals(IConstant.STATUS, runner.getStatus().toString());
		}
		
		@Test(priority = 14)
		public void verifyInputMultiplenamesForCountryName() throws XmlException, IOException, SoapUIException
		{
			/***calling configTest to get test case by passing test case name***/
			WsdlTestCase testCase = configTest(IConstant.VerifyInputMultiplenamesForCountryName);
			/***Running the test case using run and passing properties and flag as false***/
			TestRunner runner = testCase.run(new PropertiesMap(),false);
			/***Comparing expected test case result with the actual test case result***/
			Assert.assertEquals(IConstant.STATUS, runner.getStatus().toString());
		}







}

Iconstant    CountryFlagTestCaseAutomation-soapui-project

/************************* Chitra TestCase ****************************/
	//Players API
	public static final String VerifyValidInputInPlayerName = "TestCase 300";
	public static final String VerifyInputFirstNameForPlayer = "TestCase 301";
	public static final String VerifyInputSplcharForPlayer = "TestCase 302";
	public static final String VerifyInputLowercaseForPlayer = "TestCase 303";
	public static final String VerifyInputAlphanumericForPlayer = "TestCase 304";
	public static final String VerifyInputForBlankForPlayer = "TestCase 305";
	public static final String VerifyInputMultipleNamesForPlayer = "TestCase 306";
	
	//Country API
	public static final String VerifyValidInputForCountryName = "TestCase 307";
	public static final String VerifyInputWithSpaceForCountryName = "TestCase 308";
	public static final String VerifyInputSpcharForCountryName = "TestCase 309";
	public static final String VerifyInputLowercaseForCountryName = "TestCase 310";
	public static final String VerifyInputAlphanumForCountryName = "TestCase 311";
	public static final String VerifyInputBlankForCountryName = "TestCase 312";
	public static final String VerifyInputMultiplenamesForCountryName = "TestCase 313";




<!-- Test method  CountryISOCodeApi-->
  <test name="CountryISOCodeApi">
    <classes>
      <class name="com.countryFlag.dataFlex.countryISOCode.CountryISOCodeTest"/>
    </classes>
  </test> 
<!-- Test method  CountryISOCodeApi-->

<!-- Test method  CountryCurrencyApi-->
  <test name="CountryCurrencyApi">
    <classes>
      <class name="com.countryFlag.dataFlex.countryCurrency.CountryCurrencyTest"/>
    </classes>
  </test> 
<!-- Test method  CountryCurrencyApi-->

<!-- Test method  CountryCapitalApi-->
  <test name="CountryCapitalApi">
    <classes>
      <class name="com.countryFlag.dataFlex.countryCapital.CountryCapitalTest"/>
    </classes>
  </test> 
<!-- Test method  CountryCurrencyApi-->


<!-- Test method  CountryFlagApi-->
  <test name="CountryFlagApi">
    <classes>
      <class name="com.countryFlag.dataFlex.countryFlag.CountryFlagTest"/>
    </classes>
  </test> 
<!-- Test method  CountryCurrencyNameApi-->
  <test name="CountryCurrencyNameApi">
    <classes>
      <class name="com.countryFlag.dataFlex.countryCurrencyName.CountryCurrencyNameTest"/>
    </classes>
  </test> 
  <!-- Test method  CountryCurrencyNameApi-->
  <test name="LanguageNameTestapi">
    <classes>
      <class name="com.countryFlag.dataFlex.languageName.LanguageNameTest"/>
    </classes>
  </test> 
  <!-- Test method  fullcountryinfoApi-->
   <test name="fullcountryinfotestApi">
    <classes>
      <class name="com.countryFlag.dataFlex.fullCountryInfo.FullcountryInfoTest"/>
    </classes>
  </test> 
    <!-- Test method  countryNameApi-->
   <test name="CountryNameAPi">
    <classes>
      <class name="com.countryFlag.dataFlex.countryName.CountryNameTest"/>
    </classes>
  </test> 
   <!-- Test method  countryNameApi-->
   <test name="CountryUsingCurrencyAPi">
    <classes>
      <class name="com.countryFlag.dataFlex.countryUsingCurrency.CountryUsingCurrencyTest"/>
    </classes>
  </test> 
   <!-- Test method  countryNameApi-->
   <test name="NumberToWordsAPi">
    <classes>
      <class name="com.countryFlag.dataFlex.numbersToWords.NumbersToWordsTest"/>
    </classes>
  </test> 
	